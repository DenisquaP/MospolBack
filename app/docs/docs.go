// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth": {
            "post": {
                "description": "Creates an entry in cookie",
                "summary": "To auth user",
                "parameters": [
                    {
                        "description": "Auth",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/get_article": {
            "get": {
                "description": "Gets an entry from db by article_id",
                "summary": "To get all articles from db",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/postgres.ArticleStr"
                        }
                    }
                }
            }
        },
        "/get_articles": {
            "get": {
                "description": "Gets an entry from db by article_id",
                "summary": "To get all articles from db",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.GetArticlesResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Deletes an cookie entry",
                "summary": "To logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/new_article": {
            "post": {
                "description": "Creates an entry in db",
                "summary": "To create an article",
                "parameters": [
                    {
                        "description": "CreateArticle",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateAtricleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/new_comment": {
            "post": {
                "description": "Creates an entry in db",
                "summary": "To create a comment to an article",
                "parameters": [
                    {
                        "description": "CreateComment",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateCommentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Creates an entry in db",
                "summary": "To register an user",
                "parameters": [
                    {
                        "description": "CreateArticle",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateAuthorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.AuthRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "entity.CreateAtricleRequest": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "entity.CreateAuthorRequest": {
            "type": "object",
            "properties": {
                "author_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "is_moderator": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "entity.CreateCommentRequest": {
            "type": "object",
            "properties": {
                "article_id": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "commentator_id": {
                    "type": "integer"
                }
            }
        },
        "entity.GetArticlesResponse": {
            "type": "object",
            "properties": {
                "articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.GetAtricleResponse"
                    }
                },
                "last_page": {
                    "type": "integer"
                }
            }
        },
        "entity.GetAtricleResponse": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "postgres.Article": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "postgres.ArticleStr": {
            "type": "object",
            "properties": {
                "article": {
                    "$ref": "#/definitions/postgres.Article"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/postgres.Comment"
                    }
                }
            }
        },
        "postgres.Comment": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "commentator": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "articles_api",
	Description:      "A service to create, read and comment articles",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
